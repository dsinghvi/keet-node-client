/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Keet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { Note } from "./Note";
import { Title } from "./Title";
import { Mentions } from "./Mentions";
import { Likes } from "./Likes";
import { Comments } from "./Comments";

export const Story: core.serialization.ObjectSchema<serializers.integrations.Story.Raw, Keet.integrations.Story> =
    core.serialization.object({
        amount: core.serialization.string(),
        avatar: core.serialization.string(),
        initials: core.serialization.string(),
        audience: core.serialization.string(),
        date: core.serialization.string(),
        id: core.serialization.string(),
        note: Note,
        type: core.serialization.string(),
        attachments: core.serialization.list(core.serialization.unknown()),
        title: Title,
        mentions: Mentions,
        externWalletStatus: core.serialization.string().optional(),
        paymentId: core.serialization.string(),
        likes: Likes,
        comments: Comments,
        subType: core.serialization.string(),
    });

export declare namespace Story {
    interface Raw {
        amount: string;
        avatar: string;
        initials: string;
        audience: string;
        date: string;
        id: string;
        note: Note.Raw;
        type: string;
        attachments: unknown[];
        title: Title.Raw;
        mentions: Mentions.Raw;
        externWalletStatus?: string | null;
        paymentId: string;
        likes: Likes.Raw;
        comments: Comments.Raw;
        subType: string;
    }
}
